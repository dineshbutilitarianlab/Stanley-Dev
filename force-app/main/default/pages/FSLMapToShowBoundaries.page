<apex:page showHeader="false" standardStylesheets="false" controller="BoundaryMapController">
 <html>
<head>
  <title>City Polygons</title>
  <style>
    /* Set the map container's size */
    #map {
      width: 100%;
      height: 400px;
    }
  </style>
</head>
<body>
  <!-- Map container -->
  <div id="map"></div>

  <!-- Google Maps API script with provided API key -->
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAki1KNhw8H36mkjnT_BBsJyX-dsV3hmnA&callback=initMap" async="true" defer="true"></script>

  <script>
    function initMap() {
        debugger;
      const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 10, // Adjust the initial zoom level as needed
        center: { lat:12.9716, lng:  77.5946 } // Default center for India
      });
      const locations = [
        { name: "Koramangala", address: "Koramangala, 560034 India" },
        { name: "J. P. Nagar", address: "J. P. Nagar,560078 India" },
        { name: "Pune", address: "Pune, India" }
        // Add more locations as needed
      ];

      for (const location of locations) {
        geocodeAndCreatePolygon(map, location);
      }
    }

    function geocodeAndCreatePolygon(map, location) {
      const geocoder = new google.maps.Geocoder();

      geocoder.geocode({ address: location.address }, (results, status) => {
        if (status === "OK") {
          const geometry = results[0].geometry;
          if (geometry && geometry.location) {
            const location = geometry.location;
            createPolygon(map, location, location.name);
          }
        } else {
          console.error(`Geocode was not successful for ${location.name}: ${status}`);
        }
      });
    }

    function createPolygon(map, location, areaName) {
      const polygonCoords = [
        { lat: location.lat() + 0.01, lng: location.lng() + 0.01 },
        { lat: location.lat() - 0.01, lng: location.lng() + 0.01 },
        { lat: location.lat() - 0.01, lng: location.lng() - 0.01 },
        { lat: location.lat() + 0.01, lng: location.lng() - 0.01 }
      ];

      const polygon = new google.maps.Polygon({
        paths: polygonCoords,
        strokeColor: "#FF0000",
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: "#FF0000",
        fillOpacity: 0.35
      });

      polygon.setMap(map);
    }
  </script>
</body>
</html>

</apex:page>